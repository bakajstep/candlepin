#!/bin/bash

REGISTRY="quay.io/candlepin"
TEST_CMD="/usr/bin/cp-test -t -u -r"
DIR="$(git rev-parse --show-toplevel)/docker/"
OPERATING_SYSTEM="cs8" # Changing this variable, change default OS
PROJ_NAME="pod"

usage() {
  cat << USAGE

USAGE: test [OPTIONS]

OPTIONS:
  -c CMD    sets the command to be run by the container
              default: $TEST_CMD
  -o OS     Specify operating system where candlepin will be running
              For postgres are supported:
                cs8 - Centos Stream 8 (default)
              For mysql are supported:
                cs8 - Centos Stream 8 (default)
              Without database are supported:
                cs8 - Centos Stream 8 (default)
              For sonarqube are supported:
                cs8 - Centos Stream 8 (default)
  -m        use mysql
  -n NAME   Sets the name for the pod where containers will be running
              and also is used as prefix for containers
  -x        use no database. only spin up the candlepin container
              (useful for running things like unit tests, checkstyle,
              that don't need a running server with db)
  -q        use no database, but require the sonarqube certificate
              (for running a sonarqube upload)
  -l        skip podman pull and use local images
  -d        run containers detached and do not
              automatically shut down & remove the
              containers on the script's exit
  -e        expose ports 8443 and 8080 to the host machine

USAGE
}

while getopts ":c:mn:o:pxqlde" opt; do
  case $opt in
    c) TEST_CMD="$OPTARG";;
    m)
       DB="mariadb:10.2";
       chcon -Rt svirt_sandbox_file_t $DIR/mysql.cnf;
       sudo chown 999:999 $DIR/mysql.cnf;;
    n) PROJ_NAME="$OPTARG";;
    o) OPERATING_SYSTEM=$OPTARG;;
    p) DB="postgres:12";;
    x) DB="";;
    q) SONARQUBE="1";;
    l) USE_CACHE="1";;
    d) DETACHED="1";;
    e) EXPOSE_PORTS="1";;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      usage
      exit 1
      ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2
      usage
      exit 1
      ;;
  esac
done

# PROJ_NAME should be set in a jenkins environment. It allows multiple
#  instances of the compose to run without clobbering each other.
cd $DIR

SERVICE_PORTS_ARG=""
if [ "$EXPOSE_PORTS" == "1" ]; then
  SERVICE_PORTS_ARG="-p 8080:8080 -p 8443:8443"
fi

podman pod rm -f $PROJ_NAME

if [ "$USE_CACHE" != "1" ]; then
  podman pull "$REGISTRY/candlepin-base-$OPERATING_SYSTEM"
  podman pull "$REGISTRY/$DB"
fi

podman pod create --name $PROJ_NAME
podman network create network-$PROJ_NAME

ENV_DATABASE=""
if [[ $DB == postgres* ]]; then
  ENV_DATABASE="-e USING_POSTGRES=true -e DBHOSTNAME=db"
  podman create --name="$PROJ_NAME-db" \
    --pod "$PROJ_NAME" \
    -e POSTGRES_USER=candlepin \
    -e POSTGRES_PASSWORD= \
    -e POSTGRES_DB=candlepin \
    -e POSTGRES_HOST_AUTH_METHOD=trust \
    --net network-$PROJ_NAME \
    --network-alias db \
    --restart always \
    $REGISTRY/$DB
elif [[ $DB == mariadb* ]]; then
  ENV_DATABASE="-e USING_MYSQL=true -e DBHOSTNAME=db"
  podman create --name="$PROJ_NAME-db" \
    --pod "$PROJ_NAME" \
    -e MYSQL_ROOT_PASSWORD=password \
    -v ./mysql.cnf:/etc/mysql/conf.d/mysql.cnf \
    --net network-$PROJ_NAME \
    --network-alias db \
    --restart always \
    $REGISTRY/$DB
fi

if [[ $SONARQUBE == 1 ]]; then
  podman create --name="$PROJ_NAME-db" \
   --pod "$PROJ_NAME" \
   -v ../:/candlepin-dev \
   --volume /home/jenkins/sonar.crt:/run/secrets/sonar_crt:ro,rprivate,rbind \
   $SERVICE_PORTS_ARG \
   --network-alias candlepin \
   --net docker_default \
   --privileged \
   "$REGISTRY/candlepin-base-$OPERATING_SYSTEM"
elif [[ $OPERATING_SYSTEM == cs8 ]]; then
  podman create --name="$PROJ_NAME-candlepin" \
     --pod $PROJ_NAME \
     $ENV_DATABASE \
     -v ../:/candlepin-dev \
     -v /sys/fs/cgroup:/sys/fs/cgroup:ro \
     $SERVICE_PORTS_ARG \
     --net network-$PROJ_NAME \
     --network-alias candlepin \
     --privileged \
     "$REGISTRY/candlepin-base-$OPERATING_SYSTEM"
else
  echo "We do not support this operating system: $OPERATING_SYSTEM"
  usage
  podman pod rm -f $PROJ_NAME
  podman network rm network-$PROJ_NAME
  exit 1
fi


podman pod start $PROJ_NAME
sleep 5 # Waiting to start systemd

if [ "$DETACHED" == "1" ]; then
    # Run detached, and don't remove the containers
    podman exec -d $PROJ_NAME-candlepin $TEST_CMD
    RETVAL=$?
  else
    podman exec -t $PROJ_NAME-candlepin $TEST_CMD
    RETVAL=$?
    podman pod rm -f $PROJ_NAME
    podman network rm network-$PROJ_NAME
fi

echo "return value: $RETVAL"
cd -
exit $RETVAL
