name: AutoAssignReviewer

# GH Actions vs Jenkins
#
# Jenkins current state
#
# - Our setup is dated and as such requires additional bookkeeping when making changes
# - Our pipeline is coupled between branches. Meaning that changes in one branch
#    affect other branches. This is mainly cause my sharing agent between them.
#
#
# GH Actions pros and cons
#
# +
# +
# -
# -
#

on:
  pull_request:
    branches:
      - master

jobs:
  check_bugzilla_reference:
    runs-on: ubuntu-latest
    container:
      image: quay.io/ojanus/candlepin-jvm11
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Run build with Gradle Wrapper
#        run: |
#          PR_NUMBER=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')
#          python jenkins/check_pr_branch.py $PR_NUMBER
        run: echo "Running translation validation"

  checkstyle:
    runs-on: ubuntu-latest
    container:
      image: quay.io/ojanus/candlepin-jvm11
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Run build with Gradle Wrapper
        run: ./gradlew checkstyle

  validate_translations:
    runs-on: ubuntu-latest
    container:
      image: quay.io/ojanus/candlepin-jvm11
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Run validate translation task
        run: ./gradlew validate_translation

  unit_tests:
    runs-on: ubuntu-latest
    container:
      image: quay.io/ojanus/candlepin-jvm11
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Run unit tests with test coverage
        run: ./gradlew test coverage
      - name: Stash test reports
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          # TODO limit to only necessary files
          path: build/*

  sonar_analysis:
    needs: unit_tests
    runs-on: ubuntu-latest
    container:
      image: quay.io/ojanus/candlepin-jvm11
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Unstash test reports
        uses: actions/download-artifact@v3
        with:
          name: test-reports
      - name: Run build with Gradle Wrapper
        # TODO actually run sonar
        run: echo "Running sonar"

  spec-tests-postgresql:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Run spec test
        # TODO actually run spec test
        run: echo "Running spec test"
